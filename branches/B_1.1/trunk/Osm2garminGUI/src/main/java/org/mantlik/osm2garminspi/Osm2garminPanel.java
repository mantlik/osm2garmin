/*
 * #%L
 * Osm2garminGUI
 * %%
 * Copyright (C) 2011 Frantisek Mantlik <frantisek at mantlik.cz>
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of the 
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public 
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-2.0.html>.
 * #L%
 */
package org.mantlik.osm2garminspi;

import java.io.File;
import javax.swing.JFileChooser;
import org.mantlik.osm2garmin.Osm2garmin;
import org.openide.util.NbPreferences;

final class Osm2garminPanel extends javax.swing.JPanel {

    private final Osm2garminOptionsPanelController controller;

    Osm2garminPanel(Osm2garminOptionsPanelController controller) {
        this.controller = controller;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        downloadMethodItem = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        userdirBrowseItem = new javax.swing.JButton();
        userdirItem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mapsdirItem = new javax.swing.JTextField();
        mapsdirBrowseItem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        srtmdirItem = new javax.swing.JTextField();
        srtmdirBrowseItem = new javax.swing.JButton();
        exclusiveUtilsItem = new javax.swing.JCheckBox();
        cyclingFeaturesItem = new javax.swing.JCheckBox();
        srtmStepItem = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        contoursDensityItem = new javax.swing.JTextField();
        deleteOldMapsItem = new javax.swing.JCheckBox();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        srtmOffsLatItem = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        srtmOffsLonItem = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        minorintervalItem = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        majorintervalItem = new javax.swing.JTextField();
        thresholdminorItem = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        mediumintervalItem = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        thresholdmediumItem = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jPanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 153, 255))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(userdirBrowseItem, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.userdirBrowseItem.text")); // NOI18N
        userdirBrowseItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userdirBrowseItemActionPerformed(evt);
            }
        });

        userdirItem.setEditable(false);
        userdirItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.userdirItem.text")); // NOI18N
        userdirItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.userdirItem.toolTipText")); // NOI18N
        userdirItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                userdirItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel2.text")); // NOI18N

        mapsdirItem.setEditable(false);
        mapsdirItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.mapsdirItem.text")); // NOI18N
        mapsdirItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.mapsdirItem.toolTipText")); // NOI18N
        mapsdirItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                mapsdirItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(mapsdirBrowseItem, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.mapsdirBrowseItem.text")); // NOI18N
        mapsdirBrowseItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapsdirBrowseItemActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel3.text")); // NOI18N

        srtmdirItem.setEditable(false);
        srtmdirItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.srtmdirItem.text")); // NOI18N
        srtmdirItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.srtmdirItem.toolTipText")); // NOI18N
        srtmdirItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                srtmdirItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(srtmdirBrowseItem, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.srtmdirBrowseItem.text")); // NOI18N
        srtmdirBrowseItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srtmdirBrowseItemActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(exclusiveUtilsItem, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.exclusiveUtilsItem.text")); // NOI18N
        exclusiveUtilsItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                exclusiveUtilsItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(cyclingFeaturesItem, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.cyclingFeaturesItem.text")); // NOI18N
        cyclingFeaturesItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cyclingFeaturesItemPropertyChange(evt);
            }
        });

        srtmStepItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        srtmStepItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.srtmStepItem.text")); // NOI18N
        srtmStepItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                srtmStepItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel5.text")); // NOI18N

        contoursDensityItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        contoursDensityItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.contoursDensityItem.text")); // NOI18N
        contoursDensityItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                contoursDensityItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(deleteOldMapsItem, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.deleteOldMapsItem.text")); // NOI18N
        deleteOldMapsItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                deleteOldMapsItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel21, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel21.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel22, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel22.text")); // NOI18N

        srtmOffsLatItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        srtmOffsLatItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.srtmOffsLatItem.text")); // NOI18N
        srtmOffsLatItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.srtmOffsLatItem.toolTipText")); // NOI18N
        srtmOffsLatItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                srtmOffsLatItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel23, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel23.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel24, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel24.text")); // NOI18N

        srtmOffsLonItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        srtmOffsLonItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.srtmOffsLonItem.text")); // NOI18N
        srtmOffsLonItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.srtmOffsLonItem.toolTipText")); // NOI18N
        srtmOffsLonItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                srtmOffsLonItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel25, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel25.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel20, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel20.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel14.text")); // NOI18N

        minorintervalItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        minorintervalItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.minorintervalItem.text")); // NOI18N
        minorintervalItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.minorintervalItem.toolTipText")); // NOI18N
        minorintervalItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                minorintervalItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel9.text")); // NOI18N

        majorintervalItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        majorintervalItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.majorintervalItem.text")); // NOI18N
        majorintervalItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.majorintervalItem.toolTipText")); // NOI18N
        majorintervalItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                majorintervalItemPropertyChange(evt);
            }
        });

        thresholdminorItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        thresholdminorItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.thresholdminorItem.text")); // NOI18N
        thresholdminorItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.thresholdminorItem.toolTipText")); // NOI18N
        thresholdminorItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                thresholdminorItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel18, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel18.text")); // NOI18N

        mediumintervalItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        mediumintervalItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.mediumintervalItem.text")); // NOI18N
        mediumintervalItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.mediumintervalItem.toolTipText")); // NOI18N
        mediumintervalItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                mediumintervalItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel19, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel19.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel16, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel16.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel12.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel17, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel17.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel15, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel15.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel11.text")); // NOI18N

        thresholdmediumItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        thresholdmediumItem.setText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.thresholdmediumItem.text")); // NOI18N
        thresholdmediumItem.setToolTipText(org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.thresholdmediumItem.toolTipText")); // NOI18N
        thresholdmediumItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                thresholdmediumItemPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel13.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(Osm2garminPanel.class, "Osm2garminPanel.jLabel10.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10))
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(minorintervalItem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mediumintervalItem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(majorintervalItem, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(thresholdminorItem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thresholdmediumItem, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(minorintervalItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(mediumintervalItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(majorintervalItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thresholdminorItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(thresholdmediumItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userdirItem, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(mapsdirItem)
                            .addComponent(srtmdirItem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(srtmdirBrowseItem, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mapsdirBrowseItem, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userdirBrowseItem, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exclusiveUtilsItem, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cyclingFeaturesItem, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteOldMapsItem, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(143, 143, 143))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(143, 143, 143))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addGap(45, 45, 45)
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(srtmOffsLatItem, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel24)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(srtmOffsLonItem, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(srtmStepItem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(contoursDensityItem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userdirBrowseItem)
                    .addComponent(userdirItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mapsdirBrowseItem)
                    .addComponent(mapsdirItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srtmdirBrowseItem)
                    .addComponent(srtmdirItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srtmOffsLatItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(srtmOffsLonItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exclusiveUtilsItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteOldMapsItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cyclingFeaturesItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srtmStepItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contoursDensityItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userdirBrowseItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userdirBrowseItemActionPerformed
        JFileChooser dial = new JFileChooser("Working directory");
        dial.setLocation(150, 150);
        dial.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        dial.setCurrentDirectory(new File(userdirItem.getText()));
        if (dial.showDialog(this, "Select") == JFileChooser.APPROVE_OPTION) {
            userdirItem.setText(dial.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_userdirBrowseItemActionPerformed

    private void mapsdirBrowseItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapsdirBrowseItemActionPerformed
        JFileChooser dial = new JFileChooser("Maps directory");
        dial.setLocation(150, 150);
        dial.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        dial.setCurrentDirectory(new File(mapsdirItem.getText()));
        if (dial.showDialog(this, "Select") == JFileChooser.APPROVE_OPTION) {
            mapsdirItem.setText(dial.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_mapsdirBrowseItemActionPerformed

    private void srtmdirBrowseItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srtmdirBrowseItemActionPerformed
        JFileChooser dial = new JFileChooser("Working directory");
        dial.setLocation(150, 150);
        dial.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        dial.setCurrentDirectory(new File(srtmdirItem.getText()));
        if (dial.showDialog(this, "Select") == JFileChooser.APPROVE_OPTION) {
            srtmdirItem.setText(dial.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_srtmdirBrowseItemActionPerformed

    private void userdirItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_userdirItemPropertyChange
        if (!userdirItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("userdir",
                System.getProperty("netbeans.user") + "/"))) {
            controller.changed();
        }
    }//GEN-LAST:event_userdirItemPropertyChange

    private void mapsdirItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_mapsdirItemPropertyChange
        if (!mapsdirItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("maps_dir",
                System.getProperty("netbeans.user") + "/maps/"))) {
            controller.changed();
        }
    }//GEN-LAST:event_mapsdirItemPropertyChange

    private void srtmdirItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_srtmdirItemPropertyChange
        if (!srtmdirItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("srtm_dir",
                System.getProperty("netbeans.user") + "/SRTM/"))) {
            controller.changed();
        }
    }//GEN-LAST:event_srtmdirItemPropertyChange

    private void minorintervalItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_minorintervalItemPropertyChange
        if (!minorintervalItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("contour_minor_interval",
                "25"))) {
            controller.changed();
        }
    }//GEN-LAST:event_minorintervalItemPropertyChange

    private void mediumintervalItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_mediumintervalItemPropertyChange
        if (!mediumintervalItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("contour_medium_interval",
                "50"))) {
            controller.changed();
        }
    }//GEN-LAST:event_mediumintervalItemPropertyChange

    private void majorintervalItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_majorintervalItemPropertyChange
        if (!majorintervalItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("contour_major_interval",
                "100"))) {
            controller.changed();
        }
    }//GEN-LAST:event_majorintervalItemPropertyChange

    private void thresholdminorItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thresholdminorItemPropertyChange
        if (!thresholdminorItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("plot_minor_threshold",
                "800"))) {
            controller.changed();
        }
    }//GEN-LAST:event_thresholdminorItemPropertyChange

    private void thresholdmediumItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thresholdmediumItemPropertyChange
        if (!thresholdmediumItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("plot_medium_threshold",
                "3200"))) {
            controller.changed();
        }
    }//GEN-LAST:event_thresholdmediumItemPropertyChange

    private void exclusiveUtilsItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_exclusiveUtilsItemPropertyChange
        controller.changed();
    }//GEN-LAST:event_exclusiveUtilsItemPropertyChange

    private void cyclingFeaturesItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cyclingFeaturesItemPropertyChange
        controller.changed();
    }//GEN-LAST:event_cyclingFeaturesItemPropertyChange

    private void srtmStepItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_srtmStepItemPropertyChange
        if (!srtmStepItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("srtm_step",
                "2"))) {
            controller.changed();
        }
    }//GEN-LAST:event_srtmStepItemPropertyChange

    private void contoursDensityItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_contoursDensityItemPropertyChange
        if (!contoursDensityItem.getText().equals(NbPreferences.forModule(Osm2garmin.class).get("contours_density",
                "1"))) {
            controller.changed();
        }
    }//GEN-LAST:event_contoursDensityItemPropertyChange

    private void deleteOldMapsItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_deleteOldMapsItemPropertyChange
        controller.changed();
    }//GEN-LAST:event_deleteOldMapsItemPropertyChange

    private void srtmOffsLatItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_srtmOffsLatItemPropertyChange
        controller.changed();
    }//GEN-LAST:event_srtmOffsLatItemPropertyChange

    private void srtmOffsLonItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_srtmOffsLonItemPropertyChange
        controller.changed();
    }//GEN-LAST:event_srtmOffsLonItemPropertyChange

    void load() {
        userdirItem.setText(NbPreferences.forModule(Osm2garmin.class).get("userdir",
                System.getProperty("netbeans.user") + "/"));
        mapsdirItem.setText(NbPreferences.forModule(Osm2garmin.class).get("maps_dir",
                System.getProperty("netbeans.user") + "/maps/"));
        deleteOldMapsItem.setSelected(NbPreferences.forModule(Osm2garmin.class).get("delete_old_maps",
                "true").equals("true"));
        exclusiveUtilsItem.setSelected(NbPreferences.forModule(Osm2garmin.class).get("exclusive_utils",
                "true").equals("true"));
        srtmdirItem.setText(NbPreferences.forModule(Osm2garmin.class).get("srtm_dir",
                System.getProperty("netbeans.user") + "/SRTM/"));
        minorintervalItem.setText(NbPreferences.forModule(Osm2garmin.class).get("contour_minor_interval",
                "25"));
        mediumintervalItem.setText(NbPreferences.forModule(Osm2garmin.class).get("contour_medium_interval",
                "50"));
        majorintervalItem.setText(NbPreferences.forModule(Osm2garmin.class).get("contour_major_interval",
                "100"));
        srtmOffsLatItem.setText(NbPreferences.forModule(Osm2garmin.class).get("srtm_offs_lat",
                "0.0000000"));
        srtmOffsLonItem.setText(NbPreferences.forModule(Osm2garmin.class).get("srtm_offs_lon",
                "0.0000000"));
        thresholdminorItem.setText(NbPreferences.forModule(Osm2garmin.class).get("plot_minor_threshold",
                "500"));
        thresholdmediumItem.setText(NbPreferences.forModule(Osm2garmin.class).get("plot_medium_threshold",
                "2400"));
        cyclingFeaturesItem.setSelected(NbPreferences.forModule(Osm2garmin.class).get("cycling_features",
                "false").equals("true"));
        srtmStepItem.setText(NbPreferences.forModule(Osm2garmin.class).get("srtm_step",
                "5"));
        contoursDensityItem.setText(NbPreferences.forModule(Osm2garmin.class).get("contours_density",
                "4"));
    }

    void store() {
        String userdir = userdirItem.getText();
        if (!userdir.endsWith("/")) {
            userdir += "/";
        }
        NbPreferences.forModule(Osm2garmin.class).put("userdir", userdir);
        // update userdir-based paths
        NbPreferences.forModule(Osm2garmin.class).put("contours_dir", userdir + "contours/");
        NbPreferences.forModule(Osm2garmin.class).put("planet_file", userdir + "planet.osm.pbf");
        NbPreferences.forModule(Osm2garmin.class).put("planet_backup", userdir + "planet_backup.osm.pbf");
        NbPreferences.forModule(Osm2garmin.class).put("old_planet_file", userdir + "planet_old.osm.pbf");
        NbPreferences.forModule(Osm2garmin.class).put("osmosiswork", userdir + "osmosiswork/");
        NbPreferences.forModule(Osm2garmin.class).put("regions", userdir + "regions.txt");

        NbPreferences.forModule(Osm2garmin.class).put("maps_dir", mapsdirItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("delete_old_maps", 
                deleteOldMapsItem.isSelected() ? "true": "false");
        NbPreferences.forModule(Osm2garmin.class).put("exclusive_utils", 
                exclusiveUtilsItem.isSelected() ? "true": "false");
        NbPreferences.forModule(Osm2garmin.class).put("srtm_dir", srtmdirItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("contour_minor_interval", minorintervalItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("contour_medium_interval", mediumintervalItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("contour_major_interval", majorintervalItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("srtm_offs_lat", srtmOffsLatItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("srtm_offs_lon", srtmOffsLonItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("plot_minor_threshold", thresholdminorItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("plot_medium_threshold", thresholdmediumItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("cycling_features", 
                cyclingFeaturesItem.isSelected() ? "true": "false");
        NbPreferences.forModule(Osm2garmin.class).put("srtm_step", srtmStepItem.getText());
        NbPreferences.forModule(Osm2garmin.class).put("contours_density", contoursDensityItem.getText());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField contoursDensityItem;
    private javax.swing.JCheckBox cyclingFeaturesItem;
    private javax.swing.JCheckBox deleteOldMapsItem;
    private javax.swing.ButtonGroup downloadMethodItem;
    private javax.swing.JCheckBox exclusiveUtilsItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField majorintervalItem;
    private javax.swing.JButton mapsdirBrowseItem;
    private javax.swing.JTextField mapsdirItem;
    private javax.swing.JTextField mediumintervalItem;
    private javax.swing.JTextField minorintervalItem;
    private javax.swing.JTextField srtmOffsLatItem;
    private javax.swing.JTextField srtmOffsLonItem;
    private javax.swing.JTextField srtmStepItem;
    private javax.swing.JButton srtmdirBrowseItem;
    private javax.swing.JTextField srtmdirItem;
    private javax.swing.JTextField thresholdmediumItem;
    private javax.swing.JTextField thresholdminorItem;
    private javax.swing.JButton userdirBrowseItem;
    private javax.swing.JTextField userdirItem;
    // End of variables declaration//GEN-END:variables
}
